name: CI Workflow

on:
    workflow_dispatch:
      inputs:
          CI:
            description: Run CI workflow?
            required: true
            type: choice
            default: 'False'
            options:
              - False
              - True

permissions:
        id-token: write # This is required for aws oidc connection!
        contents: read # This is required for actions/checkout
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  ECR_REPOSITORY:  retirement-service

jobs:
  build_image:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: 'open-release/nutmeg.3'


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-OIDC

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Determine Docker Tag
        id: semver
        run: echo "::set-output name=tag::$(if [ -n "$CI" ]; then echo "v0.0.1"; else echo "v0.0.$((github.run_number + 1))"; fi)"

      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY:  ${{ env.ECR_REPOSITORY }}
            IMAGE_TAG: ${{ steps.semver.outputs.tag }}
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
